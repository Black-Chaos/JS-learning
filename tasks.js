// const count = 8;
// for (let i = 1; i <= count; i++) {
//     let chessboard = '';
//     for (let k = 1; k <= count; k++) {
//         if (i % 2) {
//             if (k % 2) {
//                 chessboard += '#';
//             } else {
//                 chessboard += ' ';
//             }
//         } else {
//             if (k % 2) {
//                 chessboard += ' ';
//             } else {
//                 chessboard += '#'
//             }
//         }
//     }
//     console.log(chessboard);
// }

// =============================

// function fizzBuzz (end, start=3) {
//     for (let i = start; i <= end; i++) {
//         let result = '';
//         if (i % 3 === 0) {
//             result += 'Fizz'
//         }
//         if (i % 5 === 0) {
//             result += 'Buzz'
//         }
//         if (result) {
//             console.log(i, result);
//         }
//     }
// }
// fizzBuzz(50)

// =========================

// function min(x, y) {
//     return Math.min(x, y)
// }
// console.log(min(0, 10));
// console.log(min(0, -10));

// =========================

// function isEven(x) {
//     return !(x % 2)
// }
// console.log(isEven(50));
// console.log(isEven(75));
// console.log(isEven(-1));

// ========================

// let text = 'qewrqwer';

// function laterInString(str, l) {
//     let total = 0;
//     if (str.includes(l)) {
//         for (const ltr of str) {
//             if (ltr === l) total++;
//         }
//     }
//     return total
// }
// console.log(laterInString(text, 'e'));

// ======================================

// function addBinary(a = 0, b = 0) {
//     let binary = '';
//     let decimal = a + b;
//     while (decimal > 0) {
//         binary = decimal % 2 + binary;
//         decimal = Math.floor(decimal / 2)
//     }
//     return binary
// }
// console.log(addBinary(49));

// -------------------------------

// function addBinary(a = 0, b = 0) {
//     return (a + b).toString(2)
// }
// console.log(addBinary(49));

// ===========================

// const str = 'hgI hnG yhHi';
// let letters = '';
// for (const letter of str) {
//     letters += letter === letter.toLowerCase() ? letter.toUpperCase() : letter.toLowerCase();
// }
// console.log(letters);

// ==========================

// function angle(x) {
//     let top = '';
//     let bottom = '';
//     for (let i = 1; i <= x; i++) {
//         for (let j = 0; j < i; j++) {
//             if (i === x) {
//                 top += '#';
//                 if (j === i - 1) return top + bottom;
//                 continue
//             }
//             top += '#';
//             bottom = '#' + bottom;
//         }
//         top += '\n';
//         bottom = '\n' + bottom;
//     }
// }
// console.log(angle(8));

// ===========================

// const cart = {
//     items: [],
//     getItems() {
//         console.log(this.items);
//     },
//     add(product) {
//         for (const item of this.items) {
//             if (item.name === product.name) {
//                 return item.quantity += 1;
//             }
//         }
//         const addProduct = {
//             ...product,
//             quantity: 1,
//         }
//         this.items.push(addProduct);
//     },
//     remove(productName, i = 0) {
//         const {items} = this
//         for (; i < items.length; i++) {
//             const { name } = items[i];
//             if (name === productName) {
//                 return items.splice(i, 1);
//             }
//         }
//     },
//     clear() {
//         this.items = [];
//     },
//     countTotalPrice() {
//         let total = 0;
//         for (const {price, quantity} of this.items) {
//             total += price * quantity;
//         }
//         console.log(total);
//     },
//     increaseQuantity(productName) {
//         for (const item of this.items) {
//             if (item.name === productName) {
//                 return (item.quantity += 1);
//             }
//         }
//     },
//     decreaseQuantity(productName) {
//         const { items } = this;
//         for (let i = 0; i < items.length; i++) {
//             const item = items[i];
//             if (item.name === productName) {
//                 if (item.quantity > 1) {
//                     return (item.quantity -= 1);
//                 }
//                 return this.remove(productName, i);
//             }
//         }
//     },
// };

// const redApple = { name: 'üçé', price: 60 };
// const mango = { name: 'ü•≠', price: 70 };
// const strawberry = { name: 'üçì', price: 75 };
// const greenApple = { name: 'üçè', price: 50 };
// const kiwi = { name: 'ü•ù', price: 80 };
// const banana = { name: 'üçå', price: 100 };

// cart.add(redApple);
// cart.add(redApple);
// cart.add(mango);
// cart.add(strawberry);
// cart.add(greenApple);
// cart.add(kiwi);
// cart.add(banana);

// cart.remove('üçè');

// cart.clear();

// cart.increaseQuantity('üçì');

// cart.decreaseQuantity('üçé');
// cart.decreaseQuantity('ü•≠');

// cart.getItems();
// cart.countTotalPrice();

// console.log(redApple);
// console.log(mango);
// console.log(strawberry);
// console.log(greenApple);
// console.log(kiwi);
// console.log(banana);

// ===============================

// const students = [
//     { name: '–ú–∞–Ω–≥–æ', score: 83, courses: ['–º–∞—Ç–µ–º–∞—Ç–∏–∫–∞', '—Ñ–∏–∑–∏–∫–∞'] },
//     { name: '–ü–æ–ª–∏', score: 59, courses: ['–∏–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–∞', '–º–∞—Ç–µ–º–∞—Ç–∏–∫–∞'] },
//     { name: '–ê—è–∫—Å', score: 37, courses: ['—Ñ–∏–∑–∏–∫–∞', '–±–∏–æ–ª–æ–≥–∏—è'] },
//     { name: '–ö–∏–≤–∏', score: 94, courses: ['–ª–∏—Ç–µ—Ä–∞—Ç—É—Ä–∞', '–∏–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–∞'] },
//     { name: 'Lime', score: 94, courses: ['—Ñ–∏–∑–∏–∫–∞', '–∏–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–∞'] },
// ];
// const uniqueSortedCourses = students
//     .flatMap(student => student.courses)
//     .filter((course, index, array) => array.indexOf(course) === index)
//     .sort((a, b) => a.localeCompare(b));

// const uniqueSortedCourses = arr => new Set(arr.reduce((allCourses, student) => [...allCourses, ...student.courses], []).sort((a, b) => a.localeCompare(b)));

// console.log(uniqueSortedCourses(students)); // ['–±–∏–æ–ª–æ–≥–∏—è', '–∏–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–∞', '–ª–∏—Ç–µ—Ä–∞—Ç—É—Ä–∞', '–º–∞—Ç–µ–º–∞—Ç–∏–∫–∞', '—Ñ–∏–∑–∏–∫–∞']

// ------------------------------------------

// const allCourses = arr => arr.flatMap(el => el.courses);
// const uniqueCourses = arr => allCourses(arr).filter((el, i, arr) => arr.indexOf(el) === i);
// const sortedCourses = arr => allCourses(arr).sort((a, b) => a.localeCompare(b));
// const coursesStats = arr => allCourses(arr).reduce((acc, item) => ({
//         ...acc, // —Ä–∞—Å–ø—ã–ª–µ–Ω–∏–µ –∫–∞–∂–¥—ã–π —Ä–∞–∑ —á—Ç–æ–±—ã –ª–∏–Ω—Ç–µ—Ä—ã –Ω–µ —Ä—É–≥–∞–ª–∏—Å—å –Ω–∞ –∏–∑–º–µ–Ω–µ–Ω–∏–µ –∑–Ω–∞—á–µ–Ω–∏—è –ø–∞—Ä–∞–º–µ—Ç—Ä–∞
//         [item]: acc[item] ? acc[item] + 1 :  1,
//     }), {})
// console.log(allCourses(students));
// console.log(uniqueCourses(sortedCourses(allCourses(students))));
// console.log(coursesStats(allCourses(students)));
// console.log(coursesStats(students));

// ========================================

// const cart = [
//     { label: 'apples', price: 50, quantity: 2 },
//     { label: 'bananas', price: 40, quantity: 3 },
//     { label: 'orange', price: 70, quantity: 1 },
//     { label: 'pineapples', price: 110, quantity: 3 },
// ];

// const totalAmount = cart =>
//     cart.reduce((total, { price, quantity }) => total + price * quantity, 0);
// console.log(totalAmount(cart));

// =======================================

// const tweets = [
//     { id: '000', likes: 5, tags: ['js', 'nodejs'] },
//     { id: '001', likes: 2, tags: ['html', 'css'] },
//     { id: '002', likes: 17, tags: ['html', 'js', 'nodejs'] },
//     { id: '003', likes: 8, tags: ['css', 'react'] },
//     { id: '004', likes: 0, tags: ['js', 'nodejs', 'react'] },
// ];
// // —Å–æ–±–µ—Ä–µ–º –≤ –º–∞—Å—Å–∏–≤ –≤—Å–µ —Ç–µ–≥–∏, –∫–æ—Ç–æ—Ä—ã–µ –≤—Å—Ç—Ä–µ—á–∞—é—Ç—Å—è –≤ –ø–æ—Å—Ç–∞—Ö
// // const allTags = arr => arr.reduce((acc, el) => acc = [...acc, ...el.tags], []);
// const allTags = arr => arr.flatMap(el => el.tags);
// // console.log(allTags(tweets));

// // –ø–æ—Å—á–∏—Ç–∞—Ç—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö —Ç–µ–≥–æ–≤ –≤ –º–∞—Å—Å–∏–≤–µ
// const tagStats = arr =>
//     arr.reduce((acc, el) => {
//         return {
//             ...acc, // —Ä–∞—Å–ø—ã–ª—è–µ–º –º–∞—Å–∏–≤ —á—Ç–æ–±—ã –Ω–µ –∏–∑–º–µ–Ω—è—Ç—å –µ–≥–æ, –∞ –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å –Ω–æ–≤—ã–π
//             [el]: acc[el] ? (acc[el] += 1) : 1, // –ø—Ä–æ–≤–µ—Ä—è–µ–º –µ—Å–ª–∏ —Ç–∞–∫–æ–π –∫–ª—é—á –µ—Å—Ç—å —Ç–æ —É–≤–µ–ª–∏—á–∏–≤–∞–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ, –µ—Å–ª–∏ –Ω–µ—Ç - –ø—Ä–∏—Å–≤–∞–∏–≤–∞–µ–º –Ω–æ–≤–æ–µ
//         };
//     }, {});
// console.log(tagStats(allTags(tweets)));

// ======================================

// –ù–∞–ø–∏—à–∏ –∫–ª–∞—Å User —è–∫–∏–π —Å—Ç–≤–æ—Ä—é—î –æ–±'—î–∫—Ç —ñ–∑ –≤–ª–∞—Å—Ç–∏–≤–æ—Å—Ç—è–º–∏ login —Ç–∞ email.
// –û–≥–æ–ª–æ—Å–∏ –ø—Ä–∏–≤–∞—Ç–Ω—ñ –≤–ª–∞—Å—Ç–∏–≤–æ—Å—Ç—ñ #login —Ç–∞ #email, –¥–æ—Å—Ç—É–ø –¥–æ —è–∫–∏—Ö –∑—Ä–æ–±–∏ —á–µ—Ä–µ–∑ –≥–µ—Ç–µ—Ä —Ç–∞ —Å–µ—Ç–µ—Ä login —Ç–∞ email.

// class User {
//     #login;
//     #email;
//     constructor({login, email}) {
//         this.#login = login;
//         this.#email = email;
//     }

//     get login() {return this.#login}
//     set login(newLogin) { this.#login = newLogin }

//     get email() { return this.#email }
//     set email(newEmail) {this.#email = newEmail}
// }

// const mango = new User({
//   login: 'Mango',
//   email: 'mango@dog.woof',
// });

// console.log(mango.login); // Mango
// mango.login = 'Mangodoge';
// console.log(mango.login); // Mangodoge

// const poly = new User({
//   login: 'Poly',
//   email: 'poly@mail.com',
// });

// console.log(poly.login); // Poly
// poly.login = 'Polycutie';
// console.log(poly.login); // Polycutie

// -------------------------------------

// –ù–∞–ø–∏—à–∏ –∫–ª–∞—Å Blogger –¥–ª—è —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –æ–±'—î–∫—Ç–∞ –±–ª–æ–≥–µ—Ä–∞ –∑ –Ω–∞—Å—Ç—É–ø–Ω–∏–º–∏ –≤–ª–∞—Å—Ç–∏–≤–æ—Å—Ç—è–º–∏:

// email - –ø–æ—à—Ç–∞, —Ä—è–¥–æ–∫
// age - –≤—ñ–∫, —á–∏—Å–ª–æ
// numberOfPosts - –∫—ñ–ª—å–∫—ñ—Å—Ç—å –ø–æ—Å—Ç—ñ–≤, —á–∏—Å–ª–æ
// topics - –º–∞—Å–∏–≤ —Ç–µ–º –Ω–∞ —è–∫–∏—Ö —Å–ø–µ—Ü—ñ–∞–ª—ñ–∑—É—î—Ç—å—Å—è –±–ª–æ–≥–µ—Ä
// –ö–ª–∞—Å —á–µ–∫–∞—î –æ–¥–∏–Ω –ø–∞—Ä–∞–º–µ—Ç—Ä - –æ–±'—î–∫—Ç –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω—å –∑ –æ–¥–Ω–æ–π–º–µ–Ω–Ω–∏–º–∏ –≤–ª–∞—Å—Ç–∏–≤–æ—Å—Ç—è–º–∏.

// –î–æ–¥–∞–π –º–µ—Ç–æ–¥ getInfo(), —è–∫–∏–π, –ø–æ–≤–µ—Ä—Ç–∞—î —Ä—è–¥–æ–∫: User ${–ø–æ—à—Ç–∞} is ${–≤—ñ–∫} years old and has ${–∫—ñ–ª—å–∫—ñ—Å—Ç—å –ø–æ—Å—Ç—ñ–≤} posts.

// –î–æ–¥–∞–π –º–µ—Ç–æ–¥ updatePostCount(value), —è–∫–∏–π —É –ø–∞—Ä–∞–º–µ—Ç—Ä—ñ value –ø—Ä–∏–π–º–∞—î –∫—ñ–ª—å–∫—ñ—Å—Ç—å –ø–æ—Å—Ç—ñ–≤, —è–∫—ñ –ø–æ—Ç—Ä—ñ–±–Ω–æ –¥–æ–¥–∞—Ç–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–µ–≤—ñ.

// class Blogger extends User {
//     constructor({ login, email, age, numberOfPosts, topics }) {
//         super({ login, email });
//         this.age = age;
//         this.numberOfPosts = numberOfPosts;
//         this.topics = topics;
//     }
//     getInfo() {
//         return `Blogger ${this.email} is ${this.age} years old and has ${this.numberOfPosts} posts`
//     }
//     updatePostCount(value) {
//         this.numberOfPosts += value
//     }
// }

// const mango = new Blogger({
//     login: 'Mango',
//   email: 'mango@mail.com',
//   age: 24,
//   numberOfPosts: 20,
//   topics: ['tech', 'cooking'],
// });
// console.log(mango);
// console.log(mango.getInfo()); // Blogger mango@mail.com is 24 years old and has 20 posts
// mango.updatePostCount(5);
// console.log(mango.getInfo()); // Blogger mango@mail.com is 24 years old and has 25 posts

// const poly = new Blogger({
//     login: 'Poly',
//   email: 'poly@mail.com',
//   age: 19,
//   numberOfPosts: 17,
//   topics: ['sports', 'gaming', 'health'],
// });
// console.log(poly.getInfo()); // User poly@mail.com is 19 years old and has 17 posts
// poly.updatePostCount(4);
// console.log(poly.getInfo()); // User poly@mail.com is 19 years old and has 21 posts

// ---------------------------------------

// –ù–∞–ø–∏—à–∏ –∫–ª–∞—Å Storage —è–∫–∏–π —Å—Ç–≤–æ—Ä—é—î –æ–±'—î–∫—Ç–∏ –¥–ª—è –∫–µ—Ä—É–≤–∞–Ω–Ω—è —Å–∫–ª–∞–¥–æ–º —Ç–æ–≤–∞—Ä—ñ–≤.
// –ü—Ä–∏ –≤–∏–∫–ª–∏–∫—É –æ—Ç—Ä–∏–º—É–≤–∞—Ç–∏–º–µ –æ–¥–∏–Ω –∞—Ä–≥—É–º–µ–Ω—Ç - –ø–æ—á–∞—Ç–∫–æ–≤–∏–π –º–∞—Å–∏–≤ —Ç–æ–≤–∞—Ä—ñ–≤ —ñ –∑–∞–ø–∏—Å—É–≤–∞—Ç–∏–º–µ –π–æ–≥–æ –≤–ª–∞—Å—Ç–∏–≤—ñ—Å—Ç—å items.

// –î–æ–¥–∞–π –º–µ—Ç–æ–¥–∏ –∫–ª–∞—Å—É:

// getItems() - –ø–æ–≤–µ—Ä—Ç–∞—î –º–∞—Å–∏–≤ —Ç–æ–≤–∞—Ä—ñ–≤.
// addItem(item) - –æ—Ç—Ä–∏–º—É—î –Ω–æ–≤–∏–π —Ç–æ–≤–∞—Ä —ñ –¥–æ–¥–∞—î –π–æ–≥–æ –¥–æ –ø–æ—Ç–æ—á–Ω–∏—Ö.
//     removeItem(item) - –æ—Ç—Ä–∏–º—É—î —Ç–æ–≤–∞—Ä —ñ, —è–∫—â–æ –≤—ñ–Ω —î, –≤–∏–¥–∞–ª—è—î –π–æ–≥–æ –∑ –ø–æ—Ç–æ—á–Ω–∏—Ö.

// class Storage {
//     constructor(items) {
//         this.items = items;
//     }

//     getItems() {return this.items}
//     addItem(item) { this.items.push(item) }
//     removeItem(item) {
//         const getIndex = this.items.includes(item);
//         if (getIndex !== -1) {
//             this.items.splice(getIndex, 1)
//         }
//     }
// }

// const storage = new Storage(['üçé', 'üçã', 'üçá', 'üçë']);

// const items = storage.getItems();
// console.table(items); // [ 'üçé', 'üçã', 'üçá', 'üçë' ]

// storage.addItem('üçå');
// console.table(storage.items); // [ 'üçé', 'üçã', 'üçá', 'üçë', 'üçå' ]

// storage.removeItem('üçã');
// console.table(storage.items); // [ 'üçé', 'üçá', 'üçë', 'üçå' ]

// ------------------------------------------

// –ù–∞–ø–∏—à–∏ –∫–ª–∞—Å Notes —è–∫–∏–π –∫–µ—Ä—É—î –∫–æ–ª–µ–∫—Ü—ñ—î—é –Ω–æ—Ç–∞—Ç–æ–∫ —É –≤–ª–∞—Å—Ç–∏–≤–æ—Å—Ç—ñ items.
// –ó–∞–º—ñ—Ç–∫–∞ —Ü–µ –æ–±'—î–∫—Ç —ñ–∑ –≤–ª–∞—Å—Ç–∏–≤–æ—Å—Ç—è–º–∏ text —Ç–∞ priority.
// –î–æ–¥–∞–π –∫–ª–∞—Å—É —Å—Ç–∞—Ç–∏—á–Ω—É –≤–ª–∞—Å—Ç–∏–≤—ñ—Å—Ç—å Priority, —É —è–∫–æ–º—É –∑–±–µ—Ä—ñ–≥–∞—Ç–∏–º–µ—Ç—å—Å—è –æ–±'—î–∫—Ç —ñ–∑ –ø—Ä—ñ–æ—Ä–∏—Ç–µ—Ç–∞–º–∏.

// class Notes {
//     static Priority = {
//         LOW: 'low',
//         NORMAL: 'normal',
//         HIGH: 'high'
//     };

//     constructor(items) {
//         this.items = items;
//     }
//     addNote({ text, priority }) {
//         this.items.push({
//             text,
//             priority: Notes.Priority[priority],
//         })
//     }
//     removeNote(note) {
//         const getIndex = this.items.findIndex(item => item.text === note);
//         if (getIndex !== -1) {
//             this.items.splice(getIndex, 1)
//         }
//     }
//     updateNote(note, priority) {
//         this.items.forEach(el => {
//             if (el.text === note) {
//                 el.priority = Notes.Priority[priority];
//             }
//         });
//     }
// }

// const myNotes = new Notes([]);

// myNotes.addNote({ text: '–ú–æ—è –ø–µ—Ä—à–∞ –∑–∞–º—ñ—Ç–∫–∞', priority: 'LOW' });
// console.log(myNotes.items);

// myNotes.addNote({
//   text: '–ú–æ—è –¥—Ä—É–≥–∞ –∑–∞–º—ñ—Ç–∫–∞',
//   priority: 'NORMAL',
// });
// console.log(myNotes.items);

// myNotes.removeNote('–ú–æ—è –ø–µ—Ä—à–∞ –∑–∞–º—ñ—Ç–∫–∞');
// console.log(myNotes.items);

// myNotes.updateNote('–ú–æ—è –¥—Ä—É–≥–∞ –∑–∞–º—ñ—Ç–∫–∞', 'HIGH');
// console.log(myNotes.items);

// class Toggle {
//     constructor(settings) {
//         this.on = settings?.isOpen || false;
//     }
//     toggle() {this.on = !this.on}
// }

// const firstToggle = new Toggle({ isOpen: true });
// console.group('firstToggle');
// console.log(firstToggle.on);
// firstToggle.toggle();
// console.log(firstToggle.on);
// console.groupEnd('firstToggle');

// const secondToggle = new Toggle();
// console.group('secondToggle');
// console.log(secondToggle.on);
// secondToggle.toggle();
// console.log(secondToggle.on);
// console.groupEnd('secondToggle');

// ==================================

// –†–µ–∞–ª—ñ–∑—É–≤–∞—Ç–∏ –ø–æ—à—É–∫ —Ç–æ–≤–∞—Ä—ñ–≤ –ø–æ —á–∞—Å—Ç–∫–æ–≤—ñ–π –∞–±–æ –ø–æ–≤–Ω—ñ–π –Ω–∞–∑–≤—ñ.
// –ó—Ä–æ–±–∏—Ç–∏ —Ç–∞–∫, —â–æ–± —á–∞—Å—Ç–æ—Ç–∞ –≤–∏–∫–æ–Ω–∞–Ω–Ω—è —Ñ—É–Ω–∫—Ü—ñ—ó –æ–±—Ä–æ–±–Ω–∏–∫–∞ –ø–æ–¥—ñ—ó –±—É–ª–∞ 500ms.
// –ü—Ä–∏ —Ä–µ–Ω–¥–µ—Ä—ñ —Å–ø–∏—Å–∫—É –∑–Ω–∞–π–¥–µ–Ω–∏—Ö —Ç–æ–≤–∞—Ä—ñ–≤ –¥–æ–¥–∞—Ç–∏ –∫–Ω–æ–ø–∫—É "–î–æ–¥–∞—Ç–∏ —É –∫–æ—à–∏–∫",
// –ø—Ä–∏ –Ω–∞—Ç–∏—Å–∫–∞–Ω–Ω—ñ –Ω–∞ —è–∫—É —Ç–æ–≤–∞—Ä–∏ –±—É–¥—É—Ç—å —Ä–µ–Ω–¥–µ—Ä–∏—Ç–∏—Å—å –≤ <ul id="cartItemsContainer"></ul>
// –†–µ–∞–ª—ñ–∑—É–≤–∞—Ç–∏ –º–æ–∂–ª–∏–≤—ñ—Å—Ç—å –≤–∏–¥–∞–ª–µ–Ω–Ω—è —Ü–∏—Ö —Ç–æ–≤–∞—Ä—ñ–≤ –∑ –∫–æ—à–∏–∫–∞.

// <div class="container">
//     <input type="text" id="searchInput" placeholder="–í–≤–µ–¥—ñ—Ç—å –Ω–∞–∑–≤—É —Ç–æ–≤–∞—Ä—É" />
//     <ul id="itemsContainer"></ul>
//     <div class="cart">
//         <h2>–ö–æ—à–∏–∫</h2>
//         <ul id="cartItemsContainer"></ul>
//     </div>
// </div>;
// <script src="https://cdn.jsdelivr.net/npm/lodash@4.17.21/lodash.min.js"></script>;


// const products = [
//     '—Ç–µ–ª–µ–≤—ñ–∑–æ—Ä_Samsung',
//     '—Ç–µ–ª–µ–≤—ñ–∑–æ—Ä_LG',
//     '—Ç–µ–ª–µ–≤—ñ–∑–æ—Ä_Xiaomi',
//     '—Ç–µ–ª–µ—Ñ–æ–Ω_Samsung',
//     '—Ç–µ–ª–µ—Ñ–æ–Ω_Apple',
//     '—Ç–µ–ª–µ—Ñ–æ–Ω_Xiaomi',
//     '–ø–ª–∞–Ω—à–µ—Ç_Samsung',
//     '–ø–ª–∞–Ω—à–µ—Ç_Apple',
//     '–ø–ª–∞–Ω—à–µ—Ç_Xiaomi',
//     '–Ω–æ—É—Ç–±—É–∫_ASUS',
//     '–Ω–æ—É—Ç–±—É–∫_Apple',
//     '–Ω–æ—É—Ç–±—É–∫_Lenovo',
// ];

// const input = document.getElementById('searchInput');
// const list = document.getElementById('itemsContainer');
// const listCart = document.getElementById('cartItemsContainer');

// list.addEventListener('click', onClick);
// function onClick(e) {
//     if (e.target.nodeName !== 'BUTTON') return;
//     // listCart.append(e.target.parentNode)
//     const item = document.createElement('li');
//     const btn = document.createElement('button')
//         btn.addEventListener('click', e => e.target.parentNode.remove());
//     const text = document.createElement('p');
//     btn.textContent = '–í–∏–¥–∞–ª–∏—Ç–∏';
//     text.textContent = e.target.previousElementSibling.textContent;
//     item.append(text, btn);
//     listCart.append(item)
// }

// input.addEventListener('input', _.throttle(checkList, 500));
// function checkList(e) {
//     list.innerHTML = '';
//     const value = e.target.value.toLowerCase();
//     if (!value) return;
//     const items = products.filter(el => el.toLowerCase().includes(value));
//     list.append(...murkup(items));
// }

// function murkup(items) {
//     return items.map(el => {
//         const item = document.createElement('li');
//         const btn = document.createElement('button');
//         const text = document.createElement('p');
//         btn.textContent = '–î–æ–¥–∞—Ç–∏ —É –∫–æ—à–∏–∫';
//         text.textContent = el;
//         item.append(text, btn);
//         return item;
//     });
// }
